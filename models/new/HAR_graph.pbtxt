node {
  name: "init"
  op: "NoOp"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "init_4"
  op: "NoOp"
}
node {
  name: "LSTM_1_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr"
  op: "Qr"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Sign"
  op: "Sign"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape"
  op: "Reshape"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1/x"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/kernel"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/kernel"
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1/x"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/recurrent_kernel"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/concat"
  op: "ConcatV2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/zeros"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/ones"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_1"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/bias"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/bias"
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Assign"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/Shape"
  op: "Shape"
  input: "LSTM_1_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice"
  op: "StridedSlice"
  input: "LSTM_1/Shape"
  input: "LSTM_1/strided_slice/stack"
  input: "LSTM_1/strided_slice/stack_1"
  input: "LSTM_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "LSTM_1/zeros/packed"
  op: "Pack"
  input: "LSTM_1/strided_slice"
  input: "LSTM_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/zeros"
  op: "Fill"
  input: "LSTM_1/zeros/packed"
  input: "LSTM_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_1/packed"
  op: "Pack"
  input: "LSTM_1/strided_slice"
  input: "LSTM_1/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_1"
  op: "Fill"
  input: "LSTM_1/zeros_1/packed"
  input: "LSTM_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/transpose"
  op: "Transpose"
  input: "LSTM_1_input"
  input: "LSTM_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/Shape_1"
  op: "Shape"
  input: "LSTM_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1"
  op: "StridedSlice"
  input: "LSTM_1/Shape_1"
  input: "LSTM_1/strided_slice_1/stack"
  input: "LSTM_1/strided_slice_1/stack_1"
  input: "LSTM_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/TensorArray"
  op: "TensorArrayV3"
  input: "LSTM_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "LSTM_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "LSTM_1/TensorArrayUnstack/Shape"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range"
  op: "Range"
  input: "LSTM_1/TensorArrayUnstack/range/start"
  input: "LSTM_1/TensorArrayUnstack/strided_slice"
  input: "LSTM_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "LSTM_1/TensorArray"
  input: "LSTM_1/TensorArrayUnstack/range"
  input: "LSTM_1/transpose"
  input: "LSTM_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/transpose"
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2"
  op: "StridedSlice"
  input: "LSTM_1/transpose"
  input: "LSTM_1/strided_slice_2/stack"
  input: "LSTM_1/strided_slice_2/stack_1"
  input: "LSTM_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul"
  op: "MatMul"
  input: "LSTM_1/strided_slice_2"
  input: "LSTM_1/lstm_cell_2_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_1"
  op: "MatMul"
  input: "LSTM_1/zeros"
  input: "LSTM_1/lstm_cell_2_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/add"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2_1/MatMul"
  input: "LSTM_1/lstm_cell_2_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/BiasAdd"
  op: "BiasAdd"
  input: "LSTM_1/lstm_cell_2_1/add"
  input: "LSTM_1/lstm_cell_2_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/split"
  op: "Split"
  input: "LSTM_1/lstm_cell_2_1/split/split_dim"
  input: "LSTM_1/lstm_cell_2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_1"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_1"
  input: "LSTM_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Tanh"
  op: "Tanh"
  input: "LSTM_1/lstm_cell_2_1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/add_1"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2_1/mul"
  input: "LSTM_1/lstm_cell_2_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_2"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Tanh_1"
  op: "Tanh"
  input: "LSTM_1/lstm_cell_2_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_2"
  input: "LSTM_1/lstm_cell_2_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "LSTM_1/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "LSTM_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/while/Enter"
  op: "Enter"
  input: "LSTM_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_1"
  op: "Enter"
  input: "LSTM_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_2"
  op: "Enter"
  input: "LSTM_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_3"
  op: "Enter"
  input: "LSTM_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Merge"
  op: "Merge"
  input: "LSTM_1/while/Enter"
  input: "LSTM_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Merge_1"
  op: "Merge"
  input: "LSTM_1/while/Enter_1"
  input: "LSTM_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Merge_2"
  op: "Merge"
  input: "LSTM_1/while/Enter_2"
  input: "LSTM_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Merge_3"
  op: "Merge"
  input: "LSTM_1/while/Enter_3"
  input: "LSTM_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Less"
  op: "Less"
  input: "LSTM_1/while/Merge"
  input: "LSTM_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Less/Enter"
  op: "Enter"
  input: "LSTM_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/LoopCond"
  op: "LoopCond"
  input: "LSTM_1/while/Less"
}
node {
  name: "LSTM_1/while/Switch"
  op: "Switch"
  input: "LSTM_1/while/Merge"
  input: "LSTM_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_1"
  op: "Switch"
  input: "LSTM_1/while/Merge_1"
  input: "LSTM_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_2"
  op: "Switch"
  input: "LSTM_1/while/Merge_2"
  input: "LSTM_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_3"
  op: "Switch"
  input: "LSTM_1/while/Merge_3"
  input: "LSTM_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_3"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Identity"
  op: "Identity"
  input: "LSTM_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Identity_1"
  op: "Identity"
  input: "LSTM_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Identity_2"
  op: "Identity"
  input: "LSTM_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Identity_3"
  op: "Identity"
  input: "LSTM_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "LSTM_1/while/TensorArrayReadV3/Enter"
  input: "LSTM_1/while/Identity"
  input: "LSTM_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "LSTM_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "LSTM_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter"
  input: "^LSTM_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul"
  op: "MatMul"
  input: "LSTM_1/while/TensorArrayReadV3"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter"
  input: "^LSTM_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1"
  op: "MatMul"
  input: "LSTM_1/while/Identity_2"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/add"
  op: "AddV2"
  input: "LSTM_1/while/lstm_cell_2/MatMul"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter"
  input: "^LSTM_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "LSTM_1/while/lstm_cell_2/add"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/split/split_dim"
  op: "Const"
  input: "^LSTM_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/split"
  op: "Split"
  input: "LSTM_1/while/lstm_cell_2/split/split_dim"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_1"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1"
  input: "LSTM_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Tanh"
  op: "Tanh"
  input: "LSTM_1/while/lstm_cell_2/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_1"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/add_1"
  op: "AddV2"
  input: "LSTM_1/while/lstm_cell_2/mul"
  input: "LSTM_1/while/lstm_cell_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_2"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Tanh_1"
  op: "Tanh"
  input: "LSTM_1/while/lstm_cell_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_2"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "LSTM_1/while/Identity"
  input: "LSTM_1/while/lstm_cell_2/mul_2"
  input: "LSTM_1/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "LSTM_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/add/y"
  op: "Const"
  input: "^LSTM_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/while/add"
  op: "AddV2"
  input: "LSTM_1/while/Identity"
  input: "LSTM_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration"
  op: "NextIteration"
  input: "LSTM_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_1"
  op: "NextIteration"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_2"
  op: "NextIteration"
  input: "LSTM_1/while/lstm_cell_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_3"
  op: "NextIteration"
  input: "LSTM_1/while/lstm_cell_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit"
  op: "Exit"
  input: "LSTM_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Exit_1"
  op: "Exit"
  input: "LSTM_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_2"
  op: "Exit"
  input: "LSTM_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_3"
  op: "Exit"
  input: "LSTM_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range"
  op: "Range"
  input: "LSTM_1/TensorArrayStack/range/start"
  input: "LSTM_1/strided_slice_1"
  input: "LSTM_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1"
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "LSTM_1/TensorArray_1"
  input: "LSTM_1/TensorArrayStack/range"
  input: "LSTM_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3"
  op: "StridedSlice"
  input: "LSTM_1/TensorArrayStack/TensorArrayGatherV3"
  input: "LSTM_1/strided_slice_3/stack"
  input: "LSTM_1/strided_slice_3/stack_1"
  input: "LSTM_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/transpose_1"
  op: "Transpose"
  input: "LSTM_1/TensorArrayStack/TensorArrayGatherV3"
  input: "LSTM_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/runtime"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Flatten/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\014\000\000"
      }
    }
  }
}
node {
  name: "Flatten/Reshape"
  op: "Reshape"
  input: "LSTM_1/transpose_1"
  input: "Flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.043086376041173935
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.043086376041173935
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Dense_1/kernel/Initializer/random_uniform/max"
  input: "Dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Dense_1/kernel/Initializer/random_uniform/mul"
  input: "Dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "Dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_1/kernel"
    }
  }
}
node {
  name: "Dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Dense_1/kernel"
}
node {
  name: "Dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Dense_1/kernel"
  input: "Dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_1/bias"
    }
  }
}
node {
  name: "Dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Dense_1/bias"
}
node {
  name: "Dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "Dense_1/bias"
  input: "Dense_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/MatMul"
  op: "MatMul"
  input: "Flatten/Reshape"
  input: "Dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/BiasAdd"
  op: "BiasAdd"
  input: "Dense_1/MatMul"
  input: "Dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense_1/Relu"
  op: "Relu"
  input: "Dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3922322690486908
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3922322690486908
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Dense_2/kernel/Initializer/random_uniform/max"
  input: "Dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Dense_2/kernel/Initializer/random_uniform/mul"
  input: "Dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "Dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_2/kernel"
    }
  }
}
node {
  name: "Dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Dense_2/kernel"
}
node {
  name: "Dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "Dense_2/kernel"
  input: "Dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_2/bias"
    }
  }
}
node {
  name: "Dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Dense_2/bias"
}
node {
  name: "Dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "Dense_2/bias"
  input: "Dense_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/MatMul"
  op: "MatMul"
  input: "Dense_1/Relu"
  input: "Dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/BiasAdd"
  op: "BiasAdd"
  input: "Dense_2/MatMul"
  input: "Dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense_2/Softmax"
  op: "Softmax"
  input: "Dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax"
  op: "ArgMax"
  input: "Dense_2_target"
  input: "metrics/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1"
  op: "ArgMax"
  input: "Dense_2/Softmax"
  input: "metrics/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "metrics/acc/ArgMax"
  input: "metrics/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/acc/Cast"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum"
  op: "Sum"
  input: "metrics/acc/Cast"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size"
  op: "Size"
  input: "metrics/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1"
  op: "Cast"
  input: "metrics/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/acc/Cast_1"
  input: "^metrics/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity"
  op: "Identity"
  input: "metrics/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "Dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "Dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "Dense_2/BiasAdd"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "Dense_2_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "Dense_2_target"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "loss/Dense_2_loss/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/Sum"
  op: "Sum"
  input: "loss/Dense_2_loss/weighted_loss/Mul"
  input: "loss/Dense_2_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/num_elements"
  op: "Size"
  input: "loss/Dense_2_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/Dense_2_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range"
  op: "Range"
  input: "loss/Dense_2_loss/range/start"
  input: "loss/Dense_2_loss/Rank"
  input: "loss/Dense_2_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/Sum_1"
  op: "Sum"
  input: "loss/Dense_2_loss/Sum"
  input: "loss/Dense_2_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/value"
  op: "DivNoNan"
  input: "loss/Dense_2_loss/Sum_1"
  input: "loss/Dense_2_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/Dense_2_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/Dense_1/kernel/Regularizer/Square"
  input: "loss/Dense_1/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer/mul/x"
  input: "loss/Dense_1/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Square"
  op: "Square"
  input: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/Dense_1/bias/Regularizer/Square"
  input: "loss/Dense_1/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer/mul/x"
  input: "loss/Dense_1/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/Dense_2/kernel/Regularizer/Square"
  input: "loss/Dense_2/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer/mul/x"
  input: "loss/Dense_2/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Square"
  op: "Square"
  input: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/Dense_2/bias/Regularizer/Square"
  input: "loss/Dense_2/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer/mul/x"
  input: "loss/Dense_2/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul/x"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul/x"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul/x"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/Dense_1/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/Dense_1/kernel/Regularizer_1/Square"
  input: "loss/Dense_1/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer_1/mul/x"
  input: "loss/Dense_1/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/Dense_1/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/Dense_1/bias/Regularizer_1/Square"
  input: "loss/Dense_1/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer_1/mul/x"
  input: "loss/Dense_1/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/Dense_2/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/Dense_2/kernel/Regularizer_1/Square"
  input: "loss/Dense_2/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer_1/mul/x"
  input: "loss/Dense_2/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/Dense_2/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/Dense_2/bias/Regularizer_1/Square"
  input: "loss/Dense_2/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer_1/mul/x"
  input: "loss/Dense_2/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN"
  op: "AddN"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul"
  input: "loss/Dense_1/kernel/Regularizer/mul"
  input: "loss/Dense_1/bias/Regularizer/mul"
  input: "loss/Dense_2/kernel/Regularizer/mul"
  input: "loss/Dense_2/bias/Regularizer/mul"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_1"
  op: "AddN"
  input: "loss/mul"
  input: "loss/AddN"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/Shape"
  input: "training/RMSprop/gradients/gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Merge"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/f_count_1"
  input: "training/RMSprop/gradients/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/Merge"
  input: "LSTM_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Add/y"
  op: "Const"
  input: "^LSTM_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Add"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/Switch:1"
  input: "training/RMSprop/gradients/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/Add"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPushV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Merge_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/b_count_1"
  input: "training/RMSprop/gradients/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "training/RMSprop/gradients/gradients/Merge_1"
  input: "training/RMSprop/gradients/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_2"
  op: "LoopCond"
  input: "training/RMSprop/gradients/gradients/GreaterEqual"
}
node {
  name: "training/RMSprop/gradients/gradients/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/Merge_1"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Sub"
  op: "Sub"
  input: "training/RMSprop/gradients/gradients/Switch_1:1"
  input: "training/RMSprop/gradients/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/Sub"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_3"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_2_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1"
  input: "loss/Dense_2_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Neg"
  op: "Neg"
  input: "loss/Dense_2_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Neg"
  input: "loss/Dense_2_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_1"
  input: "loss/Dense_2_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_1/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_1/kernel/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_1/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_1/bias/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_2/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_2/kernel/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_2/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  input: "loss/Dense_2/bias/Regularizer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/Dense_2_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss/Dense_2_loss/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile"
  input: "loss/Dense_2_loss/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "Dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "Dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Dense_1/Relu"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul"
  input: "Dense_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/Dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad"
  input: "Dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Flatten/Reshape"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "LSTM_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul"
  input: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/Dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "LSTM_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_3"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "LSTM_1/TensorArray_1"
  input: "LSTM_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "training/RMSprop/gradients/gradients"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "LSTM_1/while/Exit_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "LSTM_1/TensorArrayStack/range"
  input: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/transpose"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "LSTM_1/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "LSTM_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_1_grad/b_exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_2_grad/b_exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_3_grad/b_exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Enter"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/b_sync"
  op: "ControlTrigger"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch:1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "training/RMSprop/gradients/gradients"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "LSTM_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "LSTM_1/while/Identity"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_4"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/AddN_4"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Enter"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Enter"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_5"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/AddN_5"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/AddN_5"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1"
  op: "Shape"
  input: "LSTM_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Enter"
  input: "LSTM_1/while/Identity_3"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Enter"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Enter"
  input: "LSTM_1/while/lstm_cell_2/Tanh"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Enter"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat"
  op: "ConcatV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_grad/SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_1_grad/SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_grad/TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_2_grad/SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat/Const"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Enter"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Enter"
  input: "LSTM_1/while/TensorArrayReadV3"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Enter"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Enter"
  input: "LSTM_1/while/Identity_2"
  input: "^training/RMSprop/gradients/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^training/RMSprop/gradients/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Add"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_6"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Add"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "training/RMSprop/gradients/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Add"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_7"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_8"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/iter"
    }
  }
}
node {
  name: "training/RMSprop/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter"
}
node {
  name: "training/RMSprop/iter/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/iter"
  input: "training/RMSprop/iter/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/decay"
    }
  }
}
node {
  name: "training/RMSprop/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
}
node {
  name: "training/RMSprop/decay/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay"
  input: "training/RMSprop/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "training/RMSprop/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/learning_rate"
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
}
node {
  name: "training/RMSprop/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate"
  input: "training/RMSprop/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/momentum"
    }
  }
}
node {
  name: "training/RMSprop/momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
}
node {
  name: "training/RMSprop/momentum/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum"
  input: "training/RMSprop/momentum/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/RMSprop/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rho"
    }
  }
}
node {
  name: "training/RMSprop/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
}
node {
  name: "training/RMSprop/rho/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho"
  input: "training/RMSprop/rho/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  input: "training/RMSprop/Dense_1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  input: "training/RMSprop/Dense_2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  input: "training/RMSprop/Dense_2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity"
  op: "Identity"
  input: "training/RMSprop/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1"
  op: "Identity"
  input: "training/RMSprop/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Neg"
  op: "Neg"
  input: "training/RMSprop/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/RMSprop/Identity_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_2"
  op: "Identity"
  input: "training/RMSprop/Identity_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub"
  op: "Sub"
  input: "training/RMSprop/sub/x"
  input: "training/RMSprop/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_3"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_4"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_5"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_6"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_7"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_8"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_9"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/IdentityN"
  op: "IdentityN"
  input: "training/RMSprop/gradients/gradients/AddN_7"
  input: "training/RMSprop/gradients/gradients/AddN_8"
  input: "training/RMSprop/gradients/gradients/AddN_6"
  input: "training/RMSprop/gradients/gradients/AddN_3"
  input: "training/RMSprop/gradients/gradients/AddN_2"
  input: "training/RMSprop/gradients/gradients/AddN_1"
  input: "training/RMSprop/gradients/gradients/AddN"
  input: "training/RMSprop/gradients/gradients/AddN_7"
  input: "training/RMSprop/gradients/gradients/AddN_8"
  input: "training/RMSprop/gradients/gradients/AddN_6"
  input: "training/RMSprop/gradients/gradients/AddN_3"
  input: "training/RMSprop/gradients/gradients/AddN_2"
  input: "training/RMSprop/gradients/gradients/AddN_1"
  input: "training/RMSprop/gradients/gradients/AddN"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "CustomGradient-9943"
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Dense_1/kernel"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Dense_1/bias"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Dense_2/kernel"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Square"
  op: "Square"
  input: "training/RMSprop/IdentityN:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/IdentityN:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Dense_2/bias"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/group_deps"
  op: "NoOp"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1"
}
node {
  name: "training/RMSprop/RMSprop/Const"
  op: "Const"
  input: "^training/RMSprop/RMSprop/group_deps"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "training/RMSprop/iter"
  input: "training/RMSprop/RMSprop/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^loss/AddN_1"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp"
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "total"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "count"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/bias/rms"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/kernel"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/bias"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "Dense_1/bias"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "Dense_1/kernel"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "Dense_2/kernel"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "Dense_2/bias"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/bias/rms"
}
node {
  name: "init_5"
  op: "NoOp"
  input: "^Dense_1/bias/Assign"
  input: "^Dense_1/kernel/Assign"
  input: "^Dense_2/bias/Assign"
  input: "^Dense_2/kernel/Assign"
  input: "^LSTM_1/lstm_cell_2/bias/Assign"
  input: "^LSTM_1/lstm_cell_2/kernel/Assign"
  input: "^LSTM_1/lstm_cell_2/recurrent_kernel/Assign"
  input: "^count/Assign"
  input: "^total/Assign"
  input: "^training/RMSprop/Dense_1/bias/rms/Assign"
  input: "^training/RMSprop/Dense_1/kernel/rms/Assign"
  input: "^training/RMSprop/Dense_2/bias/rms/Assign"
  input: "^training/RMSprop/Dense_2/kernel/rms/Assign"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Assign"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Assign"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Assign"
  input: "^training/RMSprop/decay/Assign"
  input: "^training/RMSprop/iter/Assign"
  input: "^training/RMSprop/learning_rate/Assign"
  input: "^training/RMSprop/momentum/Assign"
  input: "^training/RMSprop/rho/Assign"
}
node {
  name: "evaluation/group_deps"
  op: "NoOp"
  input: "^loss/AddN_1"
}
node {
  name: "predict/group_deps"
  op: "NoOp"
  input: "^Dense_2/Softmax"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: "Dense_1/bias"
        string_val: "Dense_1/kernel"
        string_val: "Dense_2/bias"
        string_val: "Dense_2/kernel"
        string_val: "LSTM_1/lstm_cell_2/bias"
        string_val: "LSTM_1/lstm_cell_2/kernel"
        string_val: "LSTM_1/lstm_cell_2/recurrent_kernel"
        string_val: "training/RMSprop/Dense_1/bias/rms"
        string_val: "training/RMSprop/Dense_1/kernel/rms"
        string_val: "training/RMSprop/Dense_2/bias/rms"
        string_val: "training/RMSprop/Dense_2/kernel/rms"
        string_val: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
        string_val: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
        string_val: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
        string_val: "training/RMSprop/decay"
        string_val: "training/RMSprop/iter"
        string_val: "training/RMSprop/learning_rate"
        string_val: "training/RMSprop/momentum"
        string_val: "training/RMSprop/rho"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Dense_1/bias/Read/ReadVariableOp"
  input: "Dense_1/kernel/Read/ReadVariableOp"
  input: "Dense_2/bias/Read/ReadVariableOp"
  input: "Dense_2/kernel/Read/ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias/Read/ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel/Read/ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Read/ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms/Read/ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms/Read/ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Read/ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/decay/Read/ReadVariableOp"
  input: "training/RMSprop/iter/Read/ReadVariableOp"
  input: "training/RMSprop/learning_rate/Read/ReadVariableOp"
  input: "training/RMSprop/momentum/Read/ReadVariableOp"
  input: "training/RMSprop/rho/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: "Dense_1/bias"
        string_val: "Dense_1/kernel"
        string_val: "Dense_2/bias"
        string_val: "Dense_2/kernel"
        string_val: "LSTM_1/lstm_cell_2/bias"
        string_val: "LSTM_1/lstm_cell_2/kernel"
        string_val: "LSTM_1/lstm_cell_2/recurrent_kernel"
        string_val: "training/RMSprop/Dense_1/bias/rms"
        string_val: "training/RMSprop/Dense_1/kernel/rms"
        string_val: "training/RMSprop/Dense_2/bias/rms"
        string_val: "training/RMSprop/Dense_2/kernel/rms"
        string_val: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
        string_val: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
        string_val: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
        string_val: "training/RMSprop/decay"
        string_val: "training/RMSprop/iter"
        string_val: "training/RMSprop/learning_rate"
        string_val: "training/RMSprop/momentum"
        string_val: "training/RMSprop/rho"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Dense_1/bias"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Dense_1/kernel"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "Dense_2/bias"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "Dense_2/kernel"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training/RMSprop/iter"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "init_6"
  op: "NoOp"
}
node {
  name: "init_1_1"
  op: "NoOp"
}
node {
  name: "init_2_1"
  op: "NoOp"
}
node {
  name: "init_3_1"
  op: "NoOp"
}
node {
  name: "init_4_1"
  op: "NoOp"
}
node {
  name: "LSTM_1_input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mean_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/stddev_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/RandomStandardNormal_1"
  op: "RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mul_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/RandomStandardNormal_1"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/stddev_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal_1"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mul_1"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr_1"
  op: "Qr"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/DiagPart_1"
  op: "DiagPart"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Sign_1"
  op: "Sign"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/DiagPart_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr_1"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Sign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose/perm_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose_1"
  op: "Transpose"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose/perm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape_1"
  op: "Reshape"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose_1"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1/x_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1/x_1"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/kernel"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Assign_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mean_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/stddev_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal_1"
  op: "RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mul_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal_1"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/stddev_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal_1"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mul_1"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr_1"
  op: "Qr"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/DiagPart_1"
  op: "DiagPart"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Sign_1"
  op: "Sign"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/DiagPart_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr_1"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Sign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose_1"
  op: "Transpose"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape_1"
  op: "Reshape"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose_1"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1/x_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1/x_1"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/recurrent_kernel"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Assign_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/ones_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_1_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/concat/axis_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/concat_1"
  op: "ConcatV2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/ones_1"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_1_1"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/concat/axis_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/bias"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Assign_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/concat_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/Shape_2"
  op: "Shape"
  input: "LSTM_1_input_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_4"
  op: "StridedSlice"
  input: "LSTM_1/Shape_2"
  input: "LSTM_1/strided_slice/stack_3"
  input: "LSTM_1/strided_slice/stack_1_1"
  input: "LSTM_1/strided_slice/stack_2_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/zeros/packed/1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "LSTM_1/zeros/packed_1"
  op: "Pack"
  input: "LSTM_1/strided_slice_4"
  input: "LSTM_1/zeros/packed/1_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/zeros/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_2"
  op: "Fill"
  input: "LSTM_1/zeros/packed_1"
  input: "LSTM_1/zeros/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/zeros_1/packed/1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_1/packed_1"
  op: "Pack"
  input: "LSTM_1/strided_slice_4"
  input: "LSTM_1/zeros_1/packed/1_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/zeros_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_1_1"
  op: "Fill"
  input: "LSTM_1/zeros_1/packed_1"
  input: "LSTM_1/zeros_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/transpose/perm_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/transpose_2"
  op: "Transpose"
  input: "LSTM_1_input_1"
  input: "LSTM_1/transpose/perm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/Shape_1_1"
  op: "Shape"
  input: "LSTM_1/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1_1"
  op: "StridedSlice"
  input: "LSTM_1/Shape_1_1"
  input: "LSTM_1/strided_slice_1/stack_3"
  input: "LSTM_1/strided_slice_1/stack_1_1"
  input: "LSTM_1/strided_slice_1/stack_2_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/TensorArray_2"
  op: "TensorArrayV3"
  input: "LSTM_1/strided_slice_1_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/Shape_1"
  op: "Shape"
  input: "LSTM_1/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice_1"
  op: "StridedSlice"
  input: "LSTM_1/TensorArrayUnstack/Shape_1"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_3"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_1_1"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_2_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range/start_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range/delta_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range_1"
  op: "Range"
  input: "LSTM_1/TensorArrayUnstack/range/start_1"
  input: "LSTM_1/TensorArrayUnstack/strided_slice_1"
  input: "LSTM_1/TensorArrayUnstack/range/delta_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_1"
  op: "TensorArrayScatterV3"
  input: "LSTM_1/TensorArray_2"
  input: "LSTM_1/TensorArrayUnstack/range_1"
  input: "LSTM_1/transpose_2"
  input: "LSTM_1/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/transpose_2"
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2_1"
  op: "StridedSlice"
  input: "LSTM_1/transpose_2"
  input: "LSTM_1/strided_slice_2/stack_3"
  input: "LSTM_1/strided_slice_2/stack_1_1"
  input: "LSTM_1/strided_slice_2/stack_2_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_2"
  op: "MatMul"
  input: "LSTM_1/strided_slice_2_1"
  input: "LSTM_1/lstm_cell_2_1/MatMul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_1_1"
  op: "MatMul"
  input: "LSTM_1/zeros_2"
  input: "LSTM_1/lstm_cell_2_1/MatMul_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/add_2"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2_1/MatMul_2"
  input: "LSTM_1/lstm_cell_2_1/MatMul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/BiasAdd/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/BiasAdd_1"
  op: "BiasAdd"
  input: "LSTM_1/lstm_cell_2_1/add_2"
  input: "LSTM_1/lstm_cell_2_1/BiasAdd/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/split/split_dim_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/split_1"
  op: "Split"
  input: "LSTM_1/lstm_cell_2_1/split/split_dim_1"
  input: "LSTM_1/lstm_cell_2_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_3"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_1_1"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_3"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_1_1"
  input: "LSTM_1/zeros_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Tanh_2"
  op: "Tanh"
  input: "LSTM_1/lstm_cell_2_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_1_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_3"
  input: "LSTM_1/lstm_cell_2_1/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/add_1_1"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2_1/mul_3"
  input: "LSTM_1/lstm_cell_2_1/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_2_1"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Tanh_1_1"
  op: "Tanh"
  input: "LSTM_1/lstm_cell_2_1/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_2_1"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_2_1"
  input: "LSTM_1/lstm_cell_2_1/Tanh_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/TensorArray_1_1"
  op: "TensorArrayV3"
  input: "LSTM_1/strided_slice_1_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "LSTM_1/time_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/while/Enter_4"
  op: "Enter"
  input: "LSTM_1/time_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_1_1"
  op: "Enter"
  input: "LSTM_1/TensorArray_1_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_2_1"
  op: "Enter"
  input: "LSTM_1/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_3_1"
  op: "Enter"
  input: "LSTM_1/zeros_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Merge_4"
  op: "Merge"
  input: "LSTM_1/while/Enter_4"
  input: "LSTM_1/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Merge_1_1"
  op: "Merge"
  input: "LSTM_1/while/Enter_1_1"
  input: "LSTM_1/while/NextIteration_1_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Merge_2_1"
  op: "Merge"
  input: "LSTM_1/while/Enter_2_1"
  input: "LSTM_1/while/NextIteration_2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Merge_3_1"
  op: "Merge"
  input: "LSTM_1/while/Enter_3_1"
  input: "LSTM_1/while/NextIteration_3_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Less/Enter_1"
  op: "Enter"
  input: "LSTM_1/strided_slice_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Less_1"
  op: "Less"
  input: "LSTM_1/while/Merge_4"
  input: "LSTM_1/while/Less/Enter_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/LoopCond_1"
  op: "LoopCond"
  input: "LSTM_1/while/Less_1"
}
node {
  name: "LSTM_1/while/Switch_4"
  op: "Switch"
  input: "LSTM_1/while/Merge_4"
  input: "LSTM_1/while/LoopCond_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_4"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_1_1"
  op: "Switch"
  input: "LSTM_1/while/Merge_1_1"
  input: "LSTM_1/while/LoopCond_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_1_1"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_2_1"
  op: "Switch"
  input: "LSTM_1/while/Merge_2_1"
  input: "LSTM_1/while/LoopCond_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_2_1"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_3_1"
  op: "Switch"
  input: "LSTM_1/while/Merge_3_1"
  input: "LSTM_1/while/LoopCond_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_3_1"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Identity_4"
  op: "Identity"
  input: "LSTM_1/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Identity_1_1"
  op: "Identity"
  input: "LSTM_1/while/Switch_1_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Identity_2_1"
  op: "Identity"
  input: "LSTM_1/while/Switch_2_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Identity_3_1"
  op: "Identity"
  input: "LSTM_1/while/Switch_3_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3/Enter_2"
  op: "Enter"
  input: "LSTM_1/TensorArray_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3/Enter_1_1"
  op: "Enter"
  input: "LSTM_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3_1"
  op: "TensorArrayReadV3"
  input: "LSTM_1/while/TensorArrayReadV3/Enter_2"
  input: "LSTM_1/while/Identity_4"
  input: "LSTM_1/while/TensorArrayReadV3/Enter_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_1"
  input: "^LSTM_1/while/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_2"
  op: "MatMul"
  input: "LSTM_1/while/TensorArrayReadV3_1"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_1"
  input: "^LSTM_1/while/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1_1"
  op: "MatMul"
  input: "LSTM_1/while/Identity_2_1"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/add_2"
  op: "AddV2"
  input: "LSTM_1/while/lstm_cell_2/MatMul_2"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_1"
  input: "^LSTM_1/while/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd_1"
  op: "BiasAdd"
  input: "LSTM_1/while/lstm_cell_2/add_2"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/split/split_dim_1"
  op: "Const"
  input: "^LSTM_1/while/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/split_1"
  op: "Split"
  input: "LSTM_1/while/lstm_cell_2/split/split_dim_1"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_3"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_1_1"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_3"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1_1"
  input: "LSTM_1/while/Identity_3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Tanh_2"
  op: "Tanh"
  input: "LSTM_1/while/lstm_cell_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_1_1"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_3"
  input: "LSTM_1/while/lstm_cell_2/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/add_1_1"
  op: "AddV2"
  input: "LSTM_1/while/lstm_cell_2/mul_3"
  input: "LSTM_1/while/lstm_cell_2/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_2_1"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Tanh_1_1"
  op: "Tanh"
  input: "LSTM_1/while/lstm_cell_2/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_2_1"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2_1"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter_1"
  op: "Enter"
  input: "LSTM_1/TensorArray_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_1"
  op: "TensorArrayWriteV3"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter_1"
  input: "LSTM_1/while/Identity_4"
  input: "LSTM_1/while/lstm_cell_2/mul_2_1"
  input: "LSTM_1/while/Identity_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
}
node {
  name: "LSTM_1/while/add/y_1"
  op: "Const"
  input: "^LSTM_1/while/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/while/add_1"
  op: "AddV2"
  input: "LSTM_1/while/Identity_4"
  input: "LSTM_1/while/add/y_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_4"
  op: "NextIteration"
  input: "LSTM_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_1_1"
  op: "NextIteration"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_2_1"
  op: "NextIteration"
  input: "LSTM_1/while/lstm_cell_2/mul_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_3_1"
  op: "NextIteration"
  input: "LSTM_1/while/lstm_cell_2/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_4"
  op: "Exit"
  input: "LSTM_1/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Exit_1_1"
  op: "Exit"
  input: "LSTM_1/while/Switch_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_2_1"
  op: "Exit"
  input: "LSTM_1/while/Switch_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_3_1"
  op: "Exit"
  input: "LSTM_1/while/Switch_3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range/start_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range/delta_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range_1"
  op: "Range"
  input: "LSTM_1/TensorArrayStack/range/start_1"
  input: "LSTM_1/strided_slice_1_1"
  input: "LSTM_1/TensorArrayStack/range/delta_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_1"
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/TensorArrayGatherV3_1"
  op: "TensorArrayGatherV3"
  input: "LSTM_1/TensorArray_1_1"
  input: "LSTM_1/TensorArrayStack/range_1"
  input: "LSTM_1/while/Exit_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3_1"
  op: "StridedSlice"
  input: "LSTM_1/TensorArrayStack/TensorArrayGatherV3_1"
  input: "LSTM_1/strided_slice_3/stack_3"
  input: "LSTM_1/strided_slice_3/stack_1_1"
  input: "LSTM_1/strided_slice_3/stack_2_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/transpose_1/perm_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/transpose_1_1"
  op: "Transpose"
  input: "LSTM_1/TensorArrayStack/TensorArrayGatherV3_1"
  input: "LSTM_1/transpose_1/perm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/runtime_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Flatten/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\014\000\000"
      }
    }
  }
}
node {
  name: "Flatten/Reshape_1"
  op: "Reshape"
  input: "LSTM_1/transpose_1_1"
  input: "Flatten/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/min_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.043086376041173935
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/max_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.043086376041173935
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/RandomUniform_1"
  op: "RandomUniform"
  input: "Dense_1/kernel/Initializer/random_uniform/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/sub_1"
  op: "Sub"
  input: "Dense_1/kernel/Initializer/random_uniform/max_1"
  input: "Dense_1/kernel/Initializer/random_uniform/min_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/mul_1"
  op: "Mul"
  input: "Dense_1/kernel/Initializer/random_uniform/RandomUniform_1"
  input: "Dense_1/kernel/Initializer/random_uniform/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform_1"
  op: "AddV2"
  input: "Dense_1/kernel/Initializer/random_uniform/mul_1"
  input: "Dense_1/kernel/Initializer/random_uniform/min_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "Dense_1/kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_1/kernel"
    }
  }
}
node {
  name: "Dense_1/kernel/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Dense_1/kernel_1"
}
node {
  name: "Dense_1/kernel/Assign_1"
  op: "AssignVariableOp"
  input: "Dense_1/kernel_1"
  input: "Dense_1/kernel/Initializer/random_uniform_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/kernel/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense_1/bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_1/bias"
    }
  }
}
node {
  name: "Dense_1/bias/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Dense_1/bias_1"
}
node {
  name: "Dense_1/bias/Assign_1"
  op: "AssignVariableOp"
  input: "Dense_1/bias_1"
  input: "Dense_1/bias/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/bias/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/MatMul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/MatMul_1"
  op: "MatMul"
  input: "Flatten/Reshape_1"
  input: "Dense_1/MatMul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/BiasAdd/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/BiasAdd_1"
  op: "BiasAdd"
  input: "Dense_1/MatMul_1"
  input: "Dense_1/BiasAdd/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense_1/Relu_1"
  op: "Relu"
  input: "Dense_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/min_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3922322690486908
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/max_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3922322690486908
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/RandomUniform_1"
  op: "RandomUniform"
  input: "Dense_2/kernel/Initializer/random_uniform/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/sub_1"
  op: "Sub"
  input: "Dense_2/kernel/Initializer/random_uniform/max_1"
  input: "Dense_2/kernel/Initializer/random_uniform/min_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/mul_1"
  op: "Mul"
  input: "Dense_2/kernel/Initializer/random_uniform/RandomUniform_1"
  input: "Dense_2/kernel/Initializer/random_uniform/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform_1"
  op: "AddV2"
  input: "Dense_2/kernel/Initializer/random_uniform/mul_1"
  input: "Dense_2/kernel/Initializer/random_uniform/min_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "Dense_2/kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_2/kernel"
    }
  }
}
node {
  name: "Dense_2/kernel/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Dense_2/kernel_1"
}
node {
  name: "Dense_2/kernel/Assign_1"
  op: "AssignVariableOp"
  input: "Dense_2/kernel_1"
  input: "Dense_2/kernel/Initializer/random_uniform_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/kernel/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense_2/bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_2/bias"
    }
  }
}
node {
  name: "Dense_2/bias/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Dense_2/bias_1"
}
node {
  name: "Dense_2/bias/Assign_1"
  op: "AssignVariableOp"
  input: "Dense_2/bias_1"
  input: "Dense_2/bias/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/bias/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/MatMul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/MatMul_1"
  op: "MatMul"
  input: "Dense_1/Relu_1"
  input: "Dense_2/MatMul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/BiasAdd/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/BiasAdd_1"
  op: "BiasAdd"
  input: "Dense_2/MatMul_1"
  input: "Dense_2/BiasAdd/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense_2/Softmax_1"
  op: "Softmax"
  input: "Dense_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2_target_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "total/Assign_1"
  op: "AssignVariableOp"
  input: "total_1"
  input: "total/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "total/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "total_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "count/Assign_1"
  op: "AssignVariableOp"
  input: "count_1"
  input: "count/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "count/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_2"
  op: "ArgMax"
  input: "Dense_2_target_1"
  input: "metrics/acc/ArgMax/dimension_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1_1"
  op: "ArgMax"
  input: "Dense_2/Softmax_1"
  input: "metrics/acc/ArgMax_1/dimension_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal_1"
  op: "Equal"
  input: "metrics/acc/ArgMax_2"
  input: "metrics/acc/ArgMax_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/acc/Cast_2"
  op: "Cast"
  input: "metrics/acc/Equal_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum_1"
  op: "Sum"
  input: "metrics/acc/Cast_2"
  input: "metrics/acc/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_2"
  op: "AssignAddVariableOp"
  input: "total_1"
  input: "metrics/acc/Sum_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/acc/AssignAddVariableOp_2"
  input: "^metrics/acc/Sum_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size_1"
  op: "Size"
  input: "metrics/acc/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1_1"
  op: "Cast"
  input: "metrics/acc/Size_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1_1"
  op: "AssignAddVariableOp"
  input: "count_1"
  input: "metrics/acc/Cast_1_1"
  input: "^metrics/acc/AssignAddVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/acc/AssignAddVariableOp_1_1"
  input: "^metrics/acc/AssignAddVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/acc/AssignAddVariableOp_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/acc/AssignAddVariableOp_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan_1"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp_2"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity_1"
  op: "Identity"
  input: "metrics/acc/div_no_nan_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_3"
  op: "Shape"
  input: "Dense_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_1_1"
  op: "Shape"
  input: "Dense_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub/y_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_3"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_1_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub/y_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin_1"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_3"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_1_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/size_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/axis_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_2"
  op: "ConcatV2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_3"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/axis_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_3"
  op: "Reshape"
  input: "Dense_2/BiasAdd_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_2_1"
  op: "Shape"
  input: "Dense_2_target_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1_1"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_2_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin_1"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1_1"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_2_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1_1"
  op: "ConcatV2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1_1"
  op: "Reshape"
  input: "Dense_2_target_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_1"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_3"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2_1"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_3"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size_1"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2_1"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_3"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_1"
  op: "Reshape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_1"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/weighted_loss/Mul_1"
  op: "Mul"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_1"
  input: "loss/Dense_2_loss/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/Const_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/Sum_2"
  op: "Sum"
  input: "loss/Dense_2_loss/weighted_loss/Mul_1"
  input: "loss/Dense_2_loss/Const_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/num_elements_1"
  op: "Size"
  input: "loss/Dense_2_loss/weighted_loss/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/num_elements/Cast_1"
  op: "Cast"
  input: "loss/Dense_2_loss/num_elements_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range/start_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range/delta_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range_1"
  op: "Range"
  input: "loss/Dense_2_loss/range/start_1"
  input: "loss/Dense_2_loss/Rank_1"
  input: "loss/Dense_2_loss/range/delta_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/Sum_1_1"
  op: "Sum"
  input: "loss/Dense_2_loss/Sum_2"
  input: "loss/Dense_2_loss/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/value_1"
  op: "DivNoNan"
  input: "loss/Dense_2_loss/Sum_1_1"
  input: "loss/Dense_2_loss/num_elements/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul_1"
  op: "Mul"
  input: "loss/mul/x_1"
  input: "loss/Dense_2_loss/value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_1"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_1"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_1"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x_1"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_1"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_1"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_1"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_1"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Square_1"
  op: "Square"
  input: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/Dense_1/kernel/Regularizer/Square_1"
  input: "loss/Dense_1/kernel/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/mul_1"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer/mul/x_1"
  input: "loss/Dense_1/kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Square_1"
  op: "Square"
  input: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/Dense_1/bias/Regularizer/Square_1"
  input: "loss/Dense_1/bias/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/mul_1"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer/mul/x_1"
  input: "loss/Dense_1/bias/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Square_1"
  op: "Square"
  input: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/Dense_2/kernel/Regularizer/Square_1"
  input: "loss/Dense_2/kernel/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/mul_1"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer/mul/x_1"
  input: "loss/Dense_2/kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Square_1"
  op: "Square"
  input: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Sum_1"
  op: "Sum"
  input: "loss/Dense_2/bias/Regularizer/Square_1"
  input: "loss/Dense_2/bias/Regularizer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/mul_1"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer/mul/x_1"
  input: "loss/Dense_2/bias/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square_1"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul/x_1"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul/x_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul/x_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/Dense_1/kernel/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/Dense_1/kernel/Regularizer_1/Square_1"
  input: "loss/Dense_1/kernel/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer_1/mul/x_1"
  input: "loss/Dense_1/kernel/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/Dense_1/bias/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/Dense_1/bias/Regularizer_1/Square_1"
  input: "loss/Dense_1/bias/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer_1/mul/x_1"
  input: "loss/Dense_1/bias/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/Dense_2/kernel/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/Dense_2/kernel/Regularizer_1/Square_1"
  input: "loss/Dense_2/kernel/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer_1/mul/x_1"
  input: "loss/Dense_2/kernel/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Square/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Square_1"
  op: "Square"
  input: "loss/Dense_2/bias/Regularizer_1/Square/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Sum_1"
  op: "Sum"
  input: "loss/Dense_2/bias/Regularizer_1/Square_1"
  input: "loss/Dense_2/bias/Regularizer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/mul/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/mul_1"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer_1/mul/x_1"
  input: "loss/Dense_2/bias/Regularizer_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_2"
  op: "AddN"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_1"
  input: "loss/Dense_1/kernel/Regularizer/mul_1"
  input: "loss/Dense_1/bias/Regularizer/mul_1"
  input: "loss/Dense_2/kernel/Regularizer/mul_1"
  input: "loss/Dense_2/bias/Regularizer/mul_1"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_1_1"
  op: "AddN"
  input: "loss/mul_1"
  input: "loss/AddN_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase_1"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input_1"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/Shape_1"
  input: "training/RMSprop/gradients/gradients/grad_ys_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Merge_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/f_count_1_1"
  input: "training/RMSprop/gradients/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/Merge_2"
  input: "LSTM_1/while/LoopCond_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Add/y_1"
  op: "Const"
  input: "^LSTM_1/while/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Add_1"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/Switch_2:1"
  input: "training/RMSprop/gradients/gradients/Add/y_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_2_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/f_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Merge_1_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/b_count_1_1"
  input: "training/RMSprop/gradients/gradients/NextIteration_1_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/GreaterEqual/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "training/RMSprop/gradients/gradients/Merge_1_1"
  input: "training/RMSprop/gradients/gradients/GreaterEqual/Enter_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_2_1"
  op: "LoopCond"
  input: "training/RMSprop/gradients/gradients/GreaterEqual_1"
}
node {
  name: "training/RMSprop/gradients/gradients/Switch_1_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/Merge_1_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Sub_1"
  op: "Sub"
  input: "training/RMSprop/gradients/gradients/Switch_1_1:1"
  input: "training/RMSprop/gradients/gradients/GreaterEqual/Enter_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_3_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/Switch_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_2_loss/value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_3"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1_1"
  input: "loss/Dense_2_loss/num_elements/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Neg_1"
  op: "Neg"
  input: "loss/Dense_2_loss/Sum_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_1_1"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Neg_1"
  input: "loss/Dense_2_loss/num_elements/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_2_1"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_1_1"
  input: "loss/Dense_2_loss/num_elements/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/mul_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_1/kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_1/kernel/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_1/bias/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_1/bias/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_2/kernel/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_2/kernel/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_2/bias/Regularizer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_1"
  input: "loss/Dense_2/bias/Regularizer/mul/x_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Shape_1"
  op: "Shape"
  input: "loss/Dense_2_loss/weighted_loss/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile_1"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_2"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_2"
  op: "Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1_1"
  op: "Shape"
  input: "loss/Dense_2_loss/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile_1"
  input: "loss/Dense_2_loss/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_1_1"
  op: "Mul"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape_1"
  op: "Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_2"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax_1"
  op: "LogSoftmax"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg_1"
  op: "Neg"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1_1"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape_1"
  op: "Shape"
  input: "Dense_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/BiasAdd_grad/BiasAddGrad_1"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_2"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_1"
  input: "Dense_2/MatMul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_1_1"
  op: "MatMul"
  input: "Dense_1/Relu_1"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_1"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_2"
  input: "Dense_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_9"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/Dense_2/BiasAdd_grad/BiasAddGrad_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/BiasAdd_grad/BiasAddGrad_1"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_1_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_1_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_2"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_1"
  input: "Dense_1/MatMul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_1_1"
  op: "MatMul"
  input: "Flatten/Reshape_1"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Shape_1"
  op: "Shape"
  input: "LSTM_1/transpose_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_2"
  input: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_2_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/Dense_1/BiasAdd_grad/BiasAddGrad_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/InvertPermutation_1"
  op: "InvertPermutation"
  input: "LSTM_1/transpose_1/perm_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/transpose_1"
  op: "Transpose"
  input: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Reshape_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/InvertPermutation_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_3_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_1_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3_1"
  op: "TensorArrayGradV3"
  input: "LSTM_1/TensorArray_1_1"
  input: "LSTM_1/while/Exit_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "training/RMSprop/gradients/gradients"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow_1"
  op: "Identity"
  input: "LSTM_1/while/Exit_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3_1"
  op: "TensorArrayScatterV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3_1"
  input: "LSTM_1/TensorArrayStack/range_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/transpose_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_1_1"
  op: "ZerosLike"
  input: "LSTM_1/while/Exit_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_2_1"
  op: "ZerosLike"
  input: "LSTM_1/while/Exit_3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_1_grad/b_exit_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_2_grad/b_exit_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/zeros_like_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_3_grad/b_exit_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/zeros_like_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_1_grad/b_exit_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad_1/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_2_grad/b_exit_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad_1/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_3_grad/b_exit_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad_1/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_1_grad/Exit_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_2_grad/Exit_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_3_grad/Exit_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Enter_1"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch_1:1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "LSTM_1/TensorArray_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3_1"
  op: "TensorArrayGradV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "training/RMSprop/gradients/gradients"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "LSTM_1/while/Identity_4"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3_1"
  op: "TensorArrayReadV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_4_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch_1:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_2"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_1_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/AddN_4_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_2_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/AddN_4_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_2_grad/SigmoidGrad_1"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_1_grad/TanhGrad_1"
  op: "TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad_1/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_5_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch_1:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_1_grad/TanhGrad_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_2"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_1_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_1_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/AddN_5_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/AddN_5_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_1"
  op: "Shape"
  input: "LSTM_1/while/Identity_3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_2"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_1_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_1_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_3_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Enter_1"
  input: "LSTM_1/while/Identity_3_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_2"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_1_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/Tanh_2"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_3"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_1_grad/SigmoidGrad_1"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_grad/SigmoidGrad_1"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_grad/TanhGrad_1"
  op: "TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad_1/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat/Const_1"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_1"
  op: "ConcatV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_grad/SigmoidGrad_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_1_grad/SigmoidGrad_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_grad/TanhGrad_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_2_grad/SigmoidGrad_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat/Const_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd_grad/BiasAddGrad_1"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_1"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_2"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_1_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_1_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_1_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_2"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/TensorArrayReadV3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/TensorArrayReadV3_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Enter_1"
  input: "LSTM_1/while/TensorArrayReadV3_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1_1"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Enter_1"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_2"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc_1"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_2_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPushV2_1"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Enter_1"
  input: "LSTM_1/while/Identity_2_1"
  input: "^training/RMSprop/gradients/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/Add_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPushV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPushV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2_1"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^training/RMSprop/gradients/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/b_sync_1"
  op: "ControlTrigger"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_1"
}
node {
  name: "training/RMSprop/gradients/gradients/NextIteration_1_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/Sub_1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/b_sync_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1_1"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Add_1"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch_1:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd_grad/BiasAddGrad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_6_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_2_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_2_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Add_1"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch_1:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad_1/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1_1"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2_1"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch_1"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2_1"
  input: "training/RMSprop/gradients/gradients/b_count_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Add_1"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch_1:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/NextIteration_1"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_7_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_8_1"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1_1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/iter/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/iter_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/iter"
    }
  }
}
node {
  name: "training/RMSprop/iter/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter_1"
}
node {
  name: "training/RMSprop/iter/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/iter_1"
  input: "training/RMSprop/iter/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/iter/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/iter_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/decay/Initializer/initial_value_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/decay_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/decay"
    }
  }
}
node {
  name: "training/RMSprop/decay/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay_1"
}
node {
  name: "training/RMSprop/decay/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay_1"
  input: "training/RMSprop/decay/Initializer/initial_value_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/decay/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/decay_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Initializer/initial_value_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "training/RMSprop/learning_rate_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/learning_rate"
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate_1"
}
node {
  name: "training/RMSprop/learning_rate/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate_1"
  input: "training/RMSprop/learning_rate/Initializer/initial_value_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Initializer/initial_value_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/momentum_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/momentum"
    }
  }
}
node {
  name: "training/RMSprop/momentum/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum_1"
}
node {
  name: "training/RMSprop/momentum/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum_1"
  input: "training/RMSprop/momentum/Initializer/initial_value_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/momentum/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Initializer/initial_value_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/RMSprop/rho_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rho"
    }
  }
}
node {
  name: "training/RMSprop/rho/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho_1"
}
node {
  name: "training/RMSprop/rho/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho_1"
  input: "training/RMSprop/rho/Initializer/initial_value_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/rho/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/shape_as_tensor_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros_1"
  op: "Fill"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/shape_as_tensor_1"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/shape_as_tensor_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros_1"
  op: "Fill"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/shape_as_tensor_1"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/shape_as_tensor_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros_1"
  op: "Fill"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/shape_as_tensor_1"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  input: "training/RMSprop/Dense_1/bias/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  input: "training/RMSprop/Dense_2/kernel/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/IsInitialized/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Assign_1"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  input: "training/RMSprop/Dense_2/bias/rms/Initializer/zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Read/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_10"
  op: "Identity"
  input: "training/RMSprop/Identity/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1_1"
  op: "Identity"
  input: "training/RMSprop/Identity_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Neg_1"
  op: "Neg"
  input: "training/RMSprop/Identity_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/RMSprop/Identity_2/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_2_1"
  op: "Identity"
  input: "training/RMSprop/Identity_2/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub/x_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_1"
  op: "Sub"
  input: "training/RMSprop/sub/x_1"
  input: "training/RMSprop/Identity_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_3_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_7_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_4_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_8_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_5_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_6_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_6_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_7_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_8_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_9_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/IdentityN_1"
  op: "IdentityN"
  input: "training/RMSprop/gradients/gradients/AddN_7_1"
  input: "training/RMSprop/gradients/gradients/AddN_8_1"
  input: "training/RMSprop/gradients/gradients/AddN_6_1"
  input: "training/RMSprop/gradients/gradients/AddN_3_1"
  input: "training/RMSprop/gradients/gradients/AddN_2_1"
  input: "training/RMSprop/gradients/gradients/AddN_1_1"
  input: "training/RMSprop/gradients/gradients/AddN_9"
  input: "training/RMSprop/gradients/gradients/AddN_7_1"
  input: "training/RMSprop/gradients/gradients/AddN_8_1"
  input: "training/RMSprop/gradients/gradients/AddN_6_1"
  input: "training/RMSprop/gradients/gradients/AddN_3_1"
  input: "training/RMSprop/gradients/gradients/AddN_2_1"
  input: "training/RMSprop/gradients/gradients/AddN_1_1"
  input: "training/RMSprop/gradients/gradients/AddN_9"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "CustomGradient-9943"
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_3"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_2_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_3"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_2_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_3"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_2_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_3"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_2_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "Dense_1/kernel_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_3"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_2_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "Dense_1/bias_1"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "Dense_1/bias_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_3"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_2_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "Dense_2/kernel_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_3"
  op: "Mul"
  input: "training/RMSprop/Identity_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Square_1"
  op: "Square"
  input: "training/RMSprop/IdentityN_1:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_1_1"
  op: "Mul"
  input: "training/RMSprop/sub_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/add_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_3"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/add_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_2_1"
  op: "Mul"
  input: "training/RMSprop/Identity_10"
  input: "training/RMSprop/IdentityN_1:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/add_1_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_2_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/add_1_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/sub_1"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_1_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "Dense_2/bias_1"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_2_1"
  op: "ReadVariableOp"
  input: "Dense_2/bias_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/group_deps_1"
  op: "NoOp"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1_1"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1_1"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1_1"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1_1"
}
node {
  name: "training/RMSprop/RMSprop/Const_1"
  op: "Const"
  input: "^training/RMSprop/RMSprop/group_deps_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "training/RMSprop/iter_1"
  input: "training/RMSprop/RMSprop/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps_1"
  op: "NoOp"
  input: "^loss/AddN_1_1"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp_1"
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "total_1"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_1_1"
  op: "AssignVariableOp"
  input: "count_1"
  input: "Placeholder_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp_1_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^AssignVariableOp_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/bias/rms_1"
}
node {
  name: "VarIsInitializedOp_1_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/kernel_1"
}
node {
  name: "VarIsInitializedOp_2_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/bias_1"
}
node {
  name: "VarIsInitializedOp_3_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_1"
}
node {
  name: "VarIsInitializedOp_4_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate_1"
}
node {
  name: "VarIsInitializedOp_5_1"
  op: "VarIsInitializedOp"
  input: "Dense_1/bias_1"
}
node {
  name: "VarIsInitializedOp_6_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter_1"
}
node {
  name: "VarIsInitializedOp_7_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay_1"
}
node {
  name: "VarIsInitializedOp_8_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho_1"
}
node {
  name: "VarIsInitializedOp_9_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_1"
}
node {
  name: "VarIsInitializedOp_10_1"
  op: "VarIsInitializedOp"
  input: "Dense_1/kernel_1"
}
node {
  name: "VarIsInitializedOp_11_1"
  op: "VarIsInitializedOp"
  input: "Dense_2/kernel_1"
}
node {
  name: "VarIsInitializedOp_12_1"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "VarIsInitializedOp_13_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_1"
}
node {
  name: "VarIsInitializedOp_14_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/kernel/rms_1"
}
node {
  name: "VarIsInitializedOp_15_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum_1"
}
node {
  name: "VarIsInitializedOp_16_1"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_1"
}
node {
  name: "VarIsInitializedOp_17_1"
  op: "VarIsInitializedOp"
  input: "Dense_2/bias_1"
}
node {
  name: "VarIsInitializedOp_18_1"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "VarIsInitializedOp_19_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/kernel/rms_1"
}
node {
  name: "VarIsInitializedOp_20_1"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/bias/rms_1"
}
node {
  name: "init_5_1"
  op: "NoOp"
  input: "^Dense_1/bias/Assign_1"
  input: "^Dense_1/kernel/Assign_1"
  input: "^Dense_2/bias/Assign_1"
  input: "^Dense_2/kernel/Assign_1"
  input: "^LSTM_1/lstm_cell_2/bias/Assign_1"
  input: "^LSTM_1/lstm_cell_2/kernel/Assign_1"
  input: "^LSTM_1/lstm_cell_2/recurrent_kernel/Assign_1"
  input: "^count/Assign_1"
  input: "^total/Assign_1"
  input: "^training/RMSprop/Dense_1/bias/rms/Assign_1"
  input: "^training/RMSprop/Dense_1/kernel/rms/Assign_1"
  input: "^training/RMSprop/Dense_2/bias/rms/Assign_1"
  input: "^training/RMSprop/Dense_2/kernel/rms/Assign_1"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Assign_1"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Assign_1"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Assign_1"
  input: "^training/RMSprop/decay/Assign_1"
  input: "^training/RMSprop/iter/Assign_1"
  input: "^training/RMSprop/learning_rate/Assign_1"
  input: "^training/RMSprop/momentum/Assign_1"
  input: "^training/RMSprop/rho/Assign_1"
}
node {
  name: "evaluation/group_deps_1"
  op: "NoOp"
  input: "^loss/AddN_1_1"
}
node {
  name: "predict/group_deps_1"
  op: "NoOp"
  input: "^Dense_2/Softmax_1"
}
node {
  name: "init_7"
  op: "NoOp"
}
node {
  name: "init_1_2"
  op: "NoOp"
}
node {
  name: "init_2_2"
  op: "NoOp"
}
node {
  name: "init_3_2"
  op: "NoOp"
}
node {
  name: "init_4_2"
  op: "NoOp"
}
node {
  name: "LSTM_1_input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mean_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/stddev_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/RandomStandardNormal_2"
  op: "RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mul_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/RandomStandardNormal_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/stddev_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal_2"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mul_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal/mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr_2"
  op: "Qr"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/random_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/DiagPart_2"
  op: "DiagPart"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Sign_2"
  op: "Sign"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/DiagPart_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_3"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Qr_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Sign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose/perm_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose_2"
  op: "Transpose"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_3"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose/perm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape/shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape_2"
  op: "Reshape"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/matrix_transpose/transpose_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1/x_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1/x_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/kernel"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Assign_2"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  input: "LSTM_1/lstm_cell_2/kernel/Initializer/mul_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/kernel/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mean_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/stddev_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal_2"
  op: "RandomStandardNormal"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mul_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/stddev_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal_2"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mul_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal/mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr_2"
  op: "Qr"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/random_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/DiagPart_2"
  op: "DiagPart"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Sign_2"
  op: "Sign"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/DiagPart_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_3"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Qr_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Sign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose_2"
  op: "Transpose"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_3"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape/shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape_2"
  op: "Reshape"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/matrix_transpose/transpose_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1/x_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1/x_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/recurrent_kernel"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Assign_2"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel/Initializer/mul_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/recurrent_kernel/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/ones_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_1_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/concat/axis_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Initializer/concat_2"
  op: "ConcatV2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_3"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/ones_2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/zeros_1_2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/concat/axis_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_1/lstm_cell_2/bias"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Assign_2"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  input: "LSTM_1/lstm_cell_2/bias/Initializer/concat_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2/bias/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/Shape_3"
  op: "Shape"
  input: "LSTM_1_input_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice/stack_2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_5"
  op: "StridedSlice"
  input: "LSTM_1/Shape_3"
  input: "LSTM_1/strided_slice/stack_4"
  input: "LSTM_1/strided_slice/stack_1_2"
  input: "LSTM_1/strided_slice/stack_2_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/zeros/packed/1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "LSTM_1/zeros/packed_2"
  op: "Pack"
  input: "LSTM_1/strided_slice_5"
  input: "LSTM_1/zeros/packed/1_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/zeros/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_3"
  op: "Fill"
  input: "LSTM_1/zeros/packed_2"
  input: "LSTM_1/zeros/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/zeros_1/packed/1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_1/packed_2"
  op: "Pack"
  input: "LSTM_1/strided_slice_5"
  input: "LSTM_1/zeros_1/packed/1_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_1/zeros_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_1/zeros_1_2"
  op: "Fill"
  input: "LSTM_1/zeros_1/packed_2"
  input: "LSTM_1/zeros_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/transpose/perm_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/transpose_3"
  op: "Transpose"
  input: "LSTM_1_input_2"
  input: "LSTM_1/transpose/perm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/Shape_1_2"
  op: "Shape"
  input: "LSTM_1/transpose_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1/stack_2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_1_2"
  op: "StridedSlice"
  input: "LSTM_1/Shape_1_2"
  input: "LSTM_1/strided_slice_1/stack_4"
  input: "LSTM_1/strided_slice_1/stack_1_2"
  input: "LSTM_1/strided_slice_1/stack_2_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/TensorArray_3"
  op: "TensorArrayV3"
  input: "LSTM_1/strided_slice_1_2"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/Shape_2"
  op: "Shape"
  input: "LSTM_1/transpose_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice/stack_2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/strided_slice_2"
  op: "StridedSlice"
  input: "LSTM_1/TensorArrayUnstack/Shape_2"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_4"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_1_2"
  input: "LSTM_1/TensorArrayUnstack/strided_slice/stack_2_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range/start_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range/delta_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/range_2"
  op: "Range"
  input: "LSTM_1/TensorArrayUnstack/range/start_2"
  input: "LSTM_1/TensorArrayUnstack/strided_slice_2"
  input: "LSTM_1/TensorArrayUnstack/range/delta_2"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_2"
  op: "TensorArrayScatterV3"
  input: "LSTM_1/TensorArray_3"
  input: "LSTM_1/TensorArrayUnstack/range_2"
  input: "LSTM_1/transpose_3"
  input: "LSTM_1/TensorArray_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/transpose_3"
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2/stack_2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_2_2"
  op: "StridedSlice"
  input: "LSTM_1/transpose_3"
  input: "LSTM_1/strided_slice_2/stack_4"
  input: "LSTM_1/strided_slice_2/stack_1_2"
  input: "LSTM_1/strided_slice_2/stack_2_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_3"
  op: "MatMul"
  input: "LSTM_1/strided_slice_2_2"
  input: "LSTM_1/lstm_cell_2_1/MatMul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/MatMul_1_2"
  op: "MatMul"
  input: "LSTM_1/zeros_3"
  input: "LSTM_1/lstm_cell_2_1/MatMul_1/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/add_3"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2_1/MatMul_3"
  input: "LSTM_1/lstm_cell_2_1/MatMul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/BiasAdd/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/BiasAdd_2"
  op: "BiasAdd"
  input: "LSTM_1/lstm_cell_2_1/add_3"
  input: "LSTM_1/lstm_cell_2_1/BiasAdd/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/split/split_dim_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/split_2"
  op: "Split"
  input: "LSTM_1/lstm_cell_2_1/split/split_dim_2"
  input: "LSTM_1/lstm_cell_2_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_4"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_1_2"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_4"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_1_2"
  input: "LSTM_1/zeros_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Tanh_3"
  op: "Tanh"
  input: "LSTM_1/lstm_cell_2_1/split_2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_1_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_4"
  input: "LSTM_1/lstm_cell_2_1/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/add_1_2"
  op: "AddV2"
  input: "LSTM_1/lstm_cell_2_1/mul_4"
  input: "LSTM_1/lstm_cell_2_1/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Sigmoid_2_2"
  op: "Sigmoid"
  input: "LSTM_1/lstm_cell_2_1/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/Tanh_1_2"
  op: "Tanh"
  input: "LSTM_1/lstm_cell_2_1/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/lstm_cell_2_1/mul_2_2"
  op: "Mul"
  input: "LSTM_1/lstm_cell_2_1/Sigmoid_2_2"
  input: "LSTM_1/lstm_cell_2_1/Tanh_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/TensorArray_1_2"
  op: "TensorArrayV3"
  input: "LSTM_1/strided_slice_1_2"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "LSTM_1/time_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/while/Enter_5"
  op: "Enter"
  input: "LSTM_1/time_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_1_2"
  op: "Enter"
  input: "LSTM_1/TensorArray_1_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_2_2"
  op: "Enter"
  input: "LSTM_1/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Enter_3_2"
  op: "Enter"
  input: "LSTM_1/zeros_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Merge_5"
  op: "Merge"
  input: "LSTM_1/while/Enter_5"
  input: "LSTM_1/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Merge_1_2"
  op: "Merge"
  input: "LSTM_1/while/Enter_1_2"
  input: "LSTM_1/while/NextIteration_1_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Merge_2_2"
  op: "Merge"
  input: "LSTM_1/while/Enter_2_2"
  input: "LSTM_1/while/NextIteration_2_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Merge_3_2"
  op: "Merge"
  input: "LSTM_1/while/Enter_3_2"
  input: "LSTM_1/while/NextIteration_3_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Less/Enter_2"
  op: "Enter"
  input: "LSTM_1/strided_slice_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/Less_2"
  op: "Less"
  input: "LSTM_1/while/Merge_5"
  input: "LSTM_1/while/Less/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/LoopCond_2"
  op: "LoopCond"
  input: "LSTM_1/while/Less_2"
}
node {
  name: "LSTM_1/while/Switch_5"
  op: "Switch"
  input: "LSTM_1/while/Merge_5"
  input: "LSTM_1/while/LoopCond_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_5"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_1_2"
  op: "Switch"
  input: "LSTM_1/while/Merge_1_2"
  input: "LSTM_1/while/LoopCond_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_1_2"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_2_2"
  op: "Switch"
  input: "LSTM_1/while/Merge_2_2"
  input: "LSTM_1/while/LoopCond_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_2_2"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Switch_3_2"
  op: "Switch"
  input: "LSTM_1/while/Merge_3_2"
  input: "LSTM_1/while/LoopCond_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Merge_3_2"
      }
    }
  }
}
node {
  name: "LSTM_1/while/Identity_5"
  op: "Identity"
  input: "LSTM_1/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Identity_1_2"
  op: "Identity"
  input: "LSTM_1/while/Switch_1_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Identity_2_2"
  op: "Identity"
  input: "LSTM_1/while/Switch_2_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Identity_3_2"
  op: "Identity"
  input: "LSTM_1/while/Switch_3_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3/Enter_3"
  op: "Enter"
  input: "LSTM_1/TensorArray_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3/Enter_1_2"
  op: "Enter"
  input: "LSTM_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayReadV3_2"
  op: "TensorArrayReadV3"
  input: "LSTM_1/while/TensorArrayReadV3/Enter_3"
  input: "LSTM_1/while/Identity_5"
  input: "LSTM_1/while/TensorArrayReadV3/Enter_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_2"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_2"
  input: "^LSTM_1/while/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_3"
  op: "MatMul"
  input: "LSTM_1/while/TensorArrayReadV3_2"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_2"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_2"
  input: "^LSTM_1/while/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/MatMul_1_2"
  op: "MatMul"
  input: "LSTM_1/while/Identity_2_2"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/add_3"
  op: "AddV2"
  input: "LSTM_1/while/lstm_cell_2/MatMul_3"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_2"
  op: "Enter"
  input: "LSTM_1/lstm_cell_2/bias_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_2"
  input: "^LSTM_1/while/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/BiasAdd_2"
  op: "BiasAdd"
  input: "LSTM_1/while/lstm_cell_2/add_3"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/split/split_dim_2"
  op: "Const"
  input: "^LSTM_1/while/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/split_2"
  op: "Split"
  input: "LSTM_1/while/lstm_cell_2/split/split_dim_2"
  input: "LSTM_1/while/lstm_cell_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_4"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_1_2"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_4"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1_2"
  input: "LSTM_1/while/Identity_3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Tanh_3"
  op: "Tanh"
  input: "LSTM_1/while/lstm_cell_2/split_2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_1_2"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_4"
  input: "LSTM_1/while/lstm_cell_2/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/add_1_2"
  op: "AddV2"
  input: "LSTM_1/while/lstm_cell_2/mul_4"
  input: "LSTM_1/while/lstm_cell_2/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Sigmoid_2_2"
  op: "Sigmoid"
  input: "LSTM_1/while/lstm_cell_2/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/Tanh_1_2"
  op: "Tanh"
  input: "LSTM_1/while/lstm_cell_2/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/lstm_cell_2/mul_2_2"
  op: "Mul"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2_2"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter_2"
  op: "Enter"
  input: "LSTM_1/TensorArray_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_2"
  op: "TensorArrayWriteV3"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter_2"
  input: "LSTM_1/while/Identity_5"
  input: "LSTM_1/while/lstm_cell_2/mul_2_2"
  input: "LSTM_1/while/Identity_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
}
node {
  name: "LSTM_1/while/add/y_2"
  op: "Const"
  input: "^LSTM_1/while/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/while/add_2"
  op: "AddV2"
  input: "LSTM_1/while/Identity_5"
  input: "LSTM_1/while/add/y_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_5"
  op: "NextIteration"
  input: "LSTM_1/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_1_2"
  op: "NextIteration"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_2_2"
  op: "NextIteration"
  input: "LSTM_1/while/lstm_cell_2/mul_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/NextIteration_3_2"
  op: "NextIteration"
  input: "LSTM_1/while/lstm_cell_2/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_5"
  op: "Exit"
  input: "LSTM_1/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/while/Exit_1_2"
  op: "Exit"
  input: "LSTM_1/while/Switch_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_2_2"
  op: "Exit"
  input: "LSTM_1/while/Switch_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/while/Exit_3_2"
  op: "Exit"
  input: "LSTM_1/while/Switch_3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range/start_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range/delta_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/range_2"
  op: "Range"
  input: "LSTM_1/TensorArrayStack/range/start_2"
  input: "LSTM_1/strided_slice_1_2"
  input: "LSTM_1/TensorArrayStack/range/delta_2"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_2"
      }
    }
  }
}
node {
  name: "LSTM_1/TensorArrayStack/TensorArrayGatherV3_2"
  op: "TensorArrayGatherV3"
  input: "LSTM_1/TensorArray_1_2"
  input: "LSTM_1/TensorArrayStack/range_2"
  input: "LSTM_1/while/Exit_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3/stack_2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_1/strided_slice_3_2"
  op: "StridedSlice"
  input: "LSTM_1/TensorArrayStack/TensorArrayGatherV3_2"
  input: "LSTM_1/strided_slice_3/stack_4"
  input: "LSTM_1/strided_slice_3/stack_1_2"
  input: "LSTM_1/strided_slice_3/stack_2_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_1/transpose_1/perm_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_1/transpose_1_2"
  op: "Transpose"
  input: "LSTM_1/TensorArrayStack/TensorArrayGatherV3_2"
  input: "LSTM_1/transpose_1/perm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_1/runtime_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Flatten/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\014\000\000"
      }
    }
  }
}
node {
  name: "Flatten/Reshape_2"
  op: "Reshape"
  input: "LSTM_1/transpose_1_2"
  input: "Flatten/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/min_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.043086376041173935
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/max_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.043086376041173935
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/RandomUniform_2"
  op: "RandomUniform"
  input: "Dense_1/kernel/Initializer/random_uniform/shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/sub_2"
  op: "Sub"
  input: "Dense_1/kernel/Initializer/random_uniform/max_2"
  input: "Dense_1/kernel/Initializer/random_uniform/min_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform/mul_2"
  op: "Mul"
  input: "Dense_1/kernel/Initializer/random_uniform/RandomUniform_2"
  input: "Dense_1/kernel/Initializer/random_uniform/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "Dense_1/kernel/Initializer/random_uniform_2"
  op: "AddV2"
  input: "Dense_1/kernel/Initializer/random_uniform/mul_2"
  input: "Dense_1/kernel/Initializer/random_uniform/min_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "Dense_1/kernel_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_1/kernel"
    }
  }
}
node {
  name: "Dense_1/kernel/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "Dense_1/kernel_2"
}
node {
  name: "Dense_1/kernel/Assign_2"
  op: "AssignVariableOp"
  input: "Dense_1/kernel_2"
  input: "Dense_1/kernel/Initializer/random_uniform_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/kernel/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/bias/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense_1/bias_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_1/bias"
    }
  }
}
node {
  name: "Dense_1/bias/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "Dense_1/bias_2"
}
node {
  name: "Dense_1/bias/Assign_2"
  op: "AssignVariableOp"
  input: "Dense_1/bias_2"
  input: "Dense_1/bias/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/bias/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/MatMul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/MatMul_2"
  op: "MatMul"
  input: "Flatten/Reshape_2"
  input: "Dense_1/MatMul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_1/BiasAdd/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_1/BiasAdd_2"
  op: "BiasAdd"
  input: "Dense_1/MatMul_2"
  input: "Dense_1/BiasAdd/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense_1/Relu_2"
  op: "Relu"
  input: "Dense_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/min_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3922322690486908
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/max_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3922322690486908
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/RandomUniform_2"
  op: "RandomUniform"
  input: "Dense_2/kernel/Initializer/random_uniform/shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/sub_2"
  op: "Sub"
  input: "Dense_2/kernel/Initializer/random_uniform/max_2"
  input: "Dense_2/kernel/Initializer/random_uniform/min_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform/mul_2"
  op: "Mul"
  input: "Dense_2/kernel/Initializer/random_uniform/RandomUniform_2"
  input: "Dense_2/kernel/Initializer/random_uniform/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "Dense_2/kernel/Initializer/random_uniform_2"
  op: "AddV2"
  input: "Dense_2/kernel/Initializer/random_uniform/mul_2"
  input: "Dense_2/kernel/Initializer/random_uniform/min_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "Dense_2/kernel_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_2/kernel"
    }
  }
}
node {
  name: "Dense_2/kernel/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "Dense_2/kernel_2"
}
node {
  name: "Dense_2/kernel/Assign_2"
  op: "AssignVariableOp"
  input: "Dense_2/kernel_2"
  input: "Dense_2/kernel/Initializer/random_uniform_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/kernel/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/bias/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense_2/bias_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Dense_2/bias"
    }
  }
}
node {
  name: "Dense_2/bias/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "Dense_2/bias_2"
}
node {
  name: "Dense_2/bias/Assign_2"
  op: "AssignVariableOp"
  input: "Dense_2/bias_2"
  input: "Dense_2/bias/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/bias/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/MatMul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/MatMul_2"
  op: "MatMul"
  input: "Dense_1/Relu_2"
  input: "Dense_2/MatMul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense_2/BiasAdd/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2/BiasAdd_2"
  op: "BiasAdd"
  input: "Dense_2/MatMul_2"
  input: "Dense_2/BiasAdd/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense_2/Softmax_2"
  op: "Softmax"
  input: "Dense_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense_2_target_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "total/Assign_2"
  op: "AssignVariableOp"
  input: "total_2"
  input: "total/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "total/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "count/Assign_2"
  op: "AssignVariableOp"
  input: "count_2"
  input: "count/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "count/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "count_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_3"
  op: "ArgMax"
  input: "Dense_2_target_2"
  input: "metrics/acc/ArgMax/dimension_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1_2"
  op: "ArgMax"
  input: "Dense_2/Softmax_2"
  input: "metrics/acc/ArgMax_1/dimension_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal_2"
  op: "Equal"
  input: "metrics/acc/ArgMax_3"
  input: "metrics/acc/ArgMax_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/acc/Cast_3"
  op: "Cast"
  input: "metrics/acc/Equal_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum_2"
  op: "Sum"
  input: "metrics/acc/Cast_3"
  input: "metrics/acc/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_3"
  op: "AssignAddVariableOp"
  input: "total_2"
  input: "metrics/acc/Sum_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics/acc/AssignAddVariableOp_3"
  input: "^metrics/acc/Sum_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size_2"
  op: "Size"
  input: "metrics/acc/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1_2"
  op: "Cast"
  input: "metrics/acc/Size_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1_2"
  op: "AssignAddVariableOp"
  input: "count_2"
  input: "metrics/acc/Cast_1_2"
  input: "^metrics/acc/AssignAddVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics/acc/AssignAddVariableOp_1_2"
  input: "^metrics/acc/AssignAddVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics/acc/AssignAddVariableOp_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics/acc/AssignAddVariableOp_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan_2"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp_3"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity_2"
  op: "Identity"
  input: "metrics/acc/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_4"
  op: "Shape"
  input: "Dense_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_1_2"
  op: "Shape"
  input: "Dense_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub/y_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_4"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_1_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub/y_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin_2"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_4"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/size_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_4"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_1_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice/size_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/axis_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_3"
  op: "ConcatV2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_4"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat/axis_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_4"
  op: "Reshape"
  input: "Dense_2/BiasAdd_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_2_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_2_2"
  op: "Shape"
  input: "Dense_2_target_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1_2"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_2_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin_2"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_1_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1_2"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_2_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1_2"
  op: "ConcatV2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_1_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1_2"
  op: "Reshape"
  input: "Dense_2_target_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/concat_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_2"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_4"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2_2"
  op: "Sub"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Rank_4"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size_2"
  op: "Pack"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Sub_2_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2_2"
  op: "Slice"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Shape_4"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_2"
  op: "Reshape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_2"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Slice_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/weighted_loss/Mul_2"
  op: "Mul"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_2"
  input: "loss/Dense_2_loss/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2_loss/Const_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/Sum_3"
  op: "Sum"
  input: "loss/Dense_2_loss/weighted_loss/Mul_2"
  input: "loss/Dense_2_loss/Const_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/num_elements_2"
  op: "Size"
  input: "loss/Dense_2_loss/weighted_loss/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/num_elements/Cast_2"
  op: "Cast"
  input: "loss/Dense_2_loss/num_elements_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range/start_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range/delta_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Dense_2_loss/range_2"
  op: "Range"
  input: "loss/Dense_2_loss/range/start_2"
  input: "loss/Dense_2_loss/Rank_2"
  input: "loss/Dense_2_loss/range/delta_2"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Dense_2_loss/Sum_1_2"
  op: "Sum"
  input: "loss/Dense_2_loss/Sum_3"
  input: "loss/Dense_2_loss/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2_loss/value_2"
  op: "DivNoNan"
  input: "loss/Dense_2_loss/Sum_1_2"
  input: "loss/Dense_2_loss/num_elements/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul_2"
  op: "Mul"
  input: "loss/mul/x_2"
  input: "loss/Dense_2_loss/value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_2"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_2"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x_2"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_2"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_2"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Square_2"
  op: "Square"
  input: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/Dense_1/kernel/Regularizer/Square_2"
  input: "loss/Dense_1/kernel/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer/mul_2"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer/mul/x_2"
  input: "loss/Dense_1/kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Square_2"
  op: "Square"
  input: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/Dense_1/bias/Regularizer/Square_2"
  input: "loss/Dense_1/bias/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer/mul_2"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer/mul/x_2"
  input: "loss/Dense_1/bias/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Square_2"
  op: "Square"
  input: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/Dense_2/kernel/Regularizer/Square_2"
  input: "loss/Dense_2/kernel/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer/mul_2"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer/mul/x_2"
  input: "loss/Dense_2/kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Square_2"
  op: "Square"
  input: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/Sum_2"
  op: "Sum"
  input: "loss/Dense_2/bias/Regularizer/Square_2"
  input: "loss/Dense_2/bias/Regularizer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer/mul_2"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer/mul/x_2"
  input: "loss/Dense_2/bias/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Square_2"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/mul/x_2"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Square_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/mul/x_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Square_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/mul/x_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/Dense_1/kernel/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/Dense_1/kernel/Regularizer_1/Square_2"
  input: "loss/Dense_1/kernel/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/kernel/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer_1/mul/x_2"
  input: "loss/Dense_1/kernel/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/Dense_1/bias/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/Dense_1/bias/Regularizer_1/Square_2"
  input: "loss/Dense_1/bias/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_1/bias/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer_1/mul/x_2"
  input: "loss/Dense_1/bias/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/Dense_2/kernel/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/Dense_2/kernel/Regularizer_1/Square_2"
  input: "loss/Dense_2/kernel/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/kernel/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer_1/mul/x_2"
  input: "loss/Dense_2/kernel/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Square/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Square_2"
  op: "Square"
  input: "loss/Dense_2/bias/Regularizer_1/Square/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/Sum_2"
  op: "Sum"
  input: "loss/Dense_2/bias/Regularizer_1/Square_2"
  input: "loss/Dense_2/bias/Regularizer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/mul/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Dense_2/bias/Regularizer_1/mul_2"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer_1/mul/x_2"
  input: "loss/Dense_2/bias/Regularizer_1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_3"
  op: "AddN"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_2"
  input: "loss/Dense_1/kernel/Regularizer/mul_2"
  input: "loss/Dense_1/bias/Regularizer/mul_2"
  input: "loss/Dense_2/kernel/Regularizer/mul_2"
  input: "loss/Dense_2/bias/Regularizer/mul_2"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_1_2"
  op: "AddN"
  input: "loss/mul_2"
  input: "loss/AddN_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase_2"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input_2"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/Shape_2"
  input: "training/RMSprop/gradients/gradients/grad_ys_0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/f_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Merge_3"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/f_count_1_2"
  input: "training/RMSprop/gradients/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Switch_3"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/Merge_3"
  input: "LSTM_1/while/LoopCond_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Add/y_2"
  op: "Const"
  input: "^LSTM_1/while/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Add_2"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/Switch_3:1"
  input: "training/RMSprop/gradients/gradients/Add/y_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/f_count_2_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/f_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Merge_1_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/b_count_1_2"
  input: "training/RMSprop/gradients/gradients/NextIteration_1_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/GreaterEqual/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/b_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "training/RMSprop/gradients/gradients/Merge_1_2"
  input: "training/RMSprop/gradients/gradients/GreaterEqual/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_2_2"
  op: "LoopCond"
  input: "training/RMSprop/gradients/gradients/GreaterEqual_2"
}
node {
  name: "training/RMSprop/gradients/gradients/Switch_1_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/Merge_1_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Sub_2"
  op: "Sub"
  input: "training/RMSprop/gradients/gradients/Switch_1_2:1"
  input: "training/RMSprop/gradients/gradients/GreaterEqual/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/b_count_3_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/Switch_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_2_loss/value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_4"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1_2"
  input: "loss/Dense_2_loss/num_elements/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_4"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Neg_2"
  op: "Neg"
  input: "loss/Dense_2_loss/Sum_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_1_2"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Neg_2"
  input: "loss/Dense_2_loss/num_elements/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_2_2"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_1_2"
  input: "loss/Dense_2_loss/num_elements/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/mul_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/div_no_nan_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/mul_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Shape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_1/kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_1/kernel/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_1/bias/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_1/bias/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_2/kernel/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_2/kernel/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_2/bias/Regularizer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/grad_ys_0_2"
  input: "loss/Dense_2/bias/Regularizer/mul/x_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_1_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/value_grad/Reshape_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape/shape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape/shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_1_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape/shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Shape_2"
  op: "Shape"
  input: "loss/Dense_2_loss/weighted_loss/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile_2"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/Dense_1/kernel/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/Dense_1/bias/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/Dense_2/kernel/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_3"
  op: "Mul"
  input: "loss/Dense_2/bias/Regularizer/Square/ReadVariableOp_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Sum_grad/Tile_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_3"
  op: "Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1_2"
  op: "Shape"
  input: "loss/Dense_2_loss/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile_2"
  input: "loss/Dense_2_loss/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_1_2"
  op: "Mul"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/Sum_grad/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Shape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape_2"
  op: "Shape"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/weighted_loss/Mul_grad/Reshape_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_3"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_3"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax_2"
  op: "LogSoftmax"
  input: "loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg_2"
  op: "Neg"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1_2"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape_2"
  op: "Shape"
  input: "Dense_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_3"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/BiasAdd_grad/BiasAddGrad_2"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_3"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_2"
  input: "Dense_2/MatMul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_1_2"
  op: "MatMul"
  input: "Dense_1/Relu_2"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_2"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_3"
  input: "Dense_1/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_10"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/Dense_2/BiasAdd_grad/BiasAddGrad_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_2/bias/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/BiasAdd_grad/BiasAddGrad_2"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_1_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/Dense_2/MatMul_grad/MatMul_1_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_2/kernel/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_3"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_2"
  input: "Dense_1/MatMul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_1_2"
  op: "MatMul"
  input: "Flatten/Reshape_2"
  input: "training/RMSprop/gradients/gradients/Dense_1/Relu_grad/ReluGrad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Shape_2"
  op: "Shape"
  input: "LSTM_1/transpose_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Reshape_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_3"
  input: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_2_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/Dense_1/BiasAdd_grad/BiasAddGrad_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_1/bias/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/InvertPermutation_2"
  op: "InvertPermutation"
  input: "LSTM_1/transpose_1/perm_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/transpose_2"
  op: "Transpose"
  input: "training/RMSprop/gradients/gradients/Flatten/Reshape_grad/Reshape_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/InvertPermutation_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_3_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/Dense_1/MatMul_grad/MatMul_1_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/Dense_1/kernel/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3_2"
  op: "TensorArrayGradV3"
  input: "LSTM_1/TensorArray_1_2"
  input: "LSTM_1/while/Exit_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "training/RMSprop/gradients/gradients"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow_2"
  op: "Identity"
  input: "LSTM_1/while/Exit_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/TensorArray_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3_2"
  op: "TensorArrayScatterV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3_2"
  input: "LSTM_1/TensorArrayStack/range_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/transpose_1_grad/transpose_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_1_2"
  op: "ZerosLike"
  input: "LSTM_1/while/Exit_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_2_2"
  op: "ZerosLike"
  input: "LSTM_1/while/Exit_3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_1_grad/b_exit_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_2_grad/b_exit_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/zeros_like_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_3_grad/b_exit_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/zeros_like_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_1_grad/b_exit_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad_1/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_2_grad/b_exit_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad_1/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Exit_3_grad/b_exit_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad_1/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad/b_switch_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_1_grad/Exit_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_2_grad/Exit_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Enter_3_grad/Exit_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/Enter_2"
  input: "LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_1_grad/Switch_2:1"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "LSTM_1/TensorArray_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3_2"
  op: "TensorArrayGradV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "training/RMSprop/gradients/gradients"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/mul_2_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_2"
  input: "LSTM_1/while/Identity_5"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3_2"
  op: "TensorArrayReadV3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_4_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_2_grad/Switch_2:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad/b_switch_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_3"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_3"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_3"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_3"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_3"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_3"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_1_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Const_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/Enter_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Shape_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/Tanh_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/AddN_4_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_2_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_2_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_2_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/AddN_4_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_2_grad/SigmoidGrad_2"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_1_grad/TanhGrad_2"
  op: "TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Reshape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_1_grad_1/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/write_barrier_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_5_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/Merge_3_grad/Switch_2:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_1_grad/TanhGrad_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad/b_switch_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_3"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_3"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_3"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_3"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_3"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_3"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_1_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Const_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_1_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/Enter_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Shape_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/AddN_5_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/AddN_5_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_3"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_2"
  op: "Shape"
  input: "LSTM_1/while/Identity_3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_3"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_3"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_3"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_3"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_3"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_1_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Const_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_1_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/Enter_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Shape_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_3_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_3_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/Enter_2"
  input: "LSTM_1/while/Identity_3_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_3"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_3"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_3"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_3"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_3"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_3"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_1_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Const_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/Enter_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Shape_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Tanh_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/Tanh_3"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_3"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/Sigmoid_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/Sigmoid_4"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1_2"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/Reshape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_1_grad/SigmoidGrad_2"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_grad/SigmoidGrad_2"
  op: "SigmoidGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_grad/TanhGrad_2"
  op: "TanhGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Reshape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_3_grad_1/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Reshape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat/Const_2"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_2"
  op: "ConcatV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_grad/SigmoidGrad_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_1_grad/SigmoidGrad_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Tanh_grad/TanhGrad_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/Sigmoid_2_grad/SigmoidGrad_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat/Const_2"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd_grad/BiasAddGrad_2"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_3"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_2"
  op: "Shape"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_3"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_3"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_3"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_3"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_3"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_1_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Const_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_1_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/Enter_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Shape_1_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/f_acc_1_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_3"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_3"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_1_2"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/split_grad/concat_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1_2"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Sum_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_3"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_3"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/TensorArrayReadV3_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/TensorArrayReadV3_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/Enter_2"
  input: "LSTM_1/while/TensorArrayReadV3_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1_2"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/Enter_2"
  input: "LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_3"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_2_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc_2"
  op: "StackV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/while/Identity_2_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPushV2_2"
  op: "StackPushV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/Enter_2"
  input: "LSTM_1/while/Identity_2_2"
  input: "^training/RMSprop/gradients/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/NextIteration_3"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/Add_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPushV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPushV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPushV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPushV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPushV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPushV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPushV2_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2/Enter_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2_2"
  op: "StackPopV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2/Enter_2"
  input: "^training/RMSprop/gradients/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/b_sync_2"
  op: "ControlTrigger"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_1_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_1_grad/Mul_1/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_2_grad/Mul_1/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_1_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/BroadcastGradientArgs/StackPopV2_3"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul/StackPopV2_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/mul_grad/Mul_1/StackPopV2_2"
}
node {
  name: "training/RMSprop/gradients/gradients/NextIteration_1_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/Sub_2"
  input: "^training/RMSprop/gradients/gradients/LSTM_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/flow_out/b_sync_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1_2"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1/StackPopV2_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/add_grad/Reshape_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Add_2"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch_2:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd_grad/BiasAddGrad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_6_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/bias/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_2_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_2_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Add_2"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch_2:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_grad/MatMul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_3_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/Switch_2_grad_1/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1_2"
  op: "Enter"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "training/RMSprop/gradients/gradients/LSTM_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2_2"
  op: "Merge"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch_2"
  op: "Switch"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2_2"
  input: "training/RMSprop/gradients/gradients/b_count_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Add_2"
  op: "AddV2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch_2:1"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1_grad/MatMul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/NextIteration_2"
  op: "NextIteration"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_2"
  op: "Exit"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_7_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul/ReadVariableOp/Enter_grad/b_acc_3_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/kernel/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/AddN_8_2"
  op: "AddN"
  input: "training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1_2"
  input: "training/RMSprop/gradients/gradients/LSTM_1/while/lstm_cell_2/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/gradients/gradients/loss/LSTM_1/lstm_cell_2/recurrent_kernel/Regularizer/Square_grad/Mul_1_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/iter/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/iter_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/iter"
    }
  }
}
node {
  name: "training/RMSprop/iter/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter_2"
}
node {
  name: "training/RMSprop/iter/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/iter_2"
  input: "training/RMSprop/iter/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/iter/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/iter_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/decay/Initializer/initial_value_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/decay_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/decay"
    }
  }
}
node {
  name: "training/RMSprop/decay/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay_2"
}
node {
  name: "training/RMSprop/decay/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay_2"
  input: "training/RMSprop/decay/Initializer/initial_value_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/decay/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/decay_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Initializer/initial_value_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "training/RMSprop/learning_rate_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/learning_rate"
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate_2"
}
node {
  name: "training/RMSprop/learning_rate/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate_2"
  input: "training/RMSprop/learning_rate/Initializer/initial_value_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Initializer/initial_value_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/momentum_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/momentum"
    }
  }
}
node {
  name: "training/RMSprop/momentum/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum_2"
}
node {
  name: "training/RMSprop/momentum/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum_2"
  input: "training/RMSprop/momentum/Initializer/initial_value_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/momentum/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Initializer/initial_value_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/RMSprop/rho_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rho"
    }
  }
}
node {
  name: "training/RMSprop/rho/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho_2"
}
node {
  name: "training/RMSprop/rho/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho_2"
  input: "training/RMSprop/rho/Initializer/initial_value_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/rho/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/shape_as_tensor_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros_2"
  op: "Fill"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/shape_as_tensor_2"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/shape_as_tensor_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros_2"
  op: "Fill"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/shape_as_tensor_2"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/shape_as_tensor_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros_2"
  op: "Fill"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/shape_as_tensor_2"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  input: "training/RMSprop/Dense_1/kernel/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/kernel/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  input: "training/RMSprop/Dense_1/bias/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_1/bias/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  input: "training/RMSprop/Dense_2/kernel/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/kernel/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Initializer/zeros_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/Dense_2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/IsInitialized/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Assign_2"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  input: "training/RMSprop/Dense_2/bias/rms/Initializer/zeros_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/Dense_2/bias/rms/Read/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_11"
  op: "Identity"
  input: "training/RMSprop/Identity/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1_2"
  op: "Identity"
  input: "training/RMSprop/Identity_1/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Neg_2"
  op: "Neg"
  input: "training/RMSprop/Identity_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/RMSprop/Identity_2/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_2_2"
  op: "Identity"
  input: "training/RMSprop/Identity_2/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub/x_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_2"
  op: "Sub"
  input: "training/RMSprop/sub/x_2"
  input: "training/RMSprop/Identity_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_3_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_7_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_4_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_8_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_5_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_6_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_6_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_3_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_7_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_8_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_9_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/IdentityN_2"
  op: "IdentityN"
  input: "training/RMSprop/gradients/gradients/AddN_7_2"
  input: "training/RMSprop/gradients/gradients/AddN_8_2"
  input: "training/RMSprop/gradients/gradients/AddN_6_2"
  input: "training/RMSprop/gradients/gradients/AddN_3_2"
  input: "training/RMSprop/gradients/gradients/AddN_2_2"
  input: "training/RMSprop/gradients/gradients/AddN_1_2"
  input: "training/RMSprop/gradients/gradients/AddN_10"
  input: "training/RMSprop/gradients/gradients/AddN_7_2"
  input: "training/RMSprop/gradients/gradients/AddN_8_2"
  input: "training/RMSprop/gradients/gradients/AddN_6_2"
  input: "training/RMSprop/gradients/gradients/AddN_3_2"
  input: "training/RMSprop/gradients/gradients/AddN_2_2"
  input: "training/RMSprop/gradients/gradients/AddN_1_2"
  input: "training/RMSprop/gradients/gradients/AddN_10"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "CustomGradient-9943"
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_4"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/mul_2_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_4"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/mul_2_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/recurrent_kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_4"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/mul_2_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  input: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_1/lstm_cell_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_4"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/mul_2_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "Dense_1/kernel_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/kernel/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/kernel/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "Dense_1/kernel_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_4"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/mul_2_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "Dense_1/bias_2"
  input: "training/RMSprop/RMSprop/update_Dense_1/bias/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_1/bias/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "Dense_1/bias_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_1/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_4"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/mul_2_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "Dense_2/kernel_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/kernel/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/kernel/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "Dense_2/kernel_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/kernel_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_4"
  op: "Mul"
  input: "training/RMSprop/Identity_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Square_2"
  op: "Square"
  input: "training/RMSprop/IdentityN_2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_1_2"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/add_3"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_4"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/add_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_2_2"
  op: "Mul"
  input: "training/RMSprop/Identity_11"
  input: "training/RMSprop/IdentityN_2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt/ReadVariableOp_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/add_1_2"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/Sqrt_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/mul_2_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/add_1_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/sub_2"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_1_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "Dense_2/bias_2"
  input: "training/RMSprop/RMSprop/update_Dense_2/bias/sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_Dense_2/bias/ReadVariableOp_2_2"
  op: "ReadVariableOp"
  input: "Dense_2/bias_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense_2/bias_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/group_deps_2"
  op: "NoOp"
  input: "^training/RMSprop/RMSprop/update_Dense_1/bias/AssignVariableOp_1_2"
  input: "^training/RMSprop/RMSprop/update_Dense_1/kernel/AssignVariableOp_1_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/bias/AssignVariableOp_1_2"
  input: "^training/RMSprop/RMSprop/update_Dense_2/kernel/AssignVariableOp_1_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/bias/AssignVariableOp_1_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/kernel/AssignVariableOp_1_2"
  input: "^training/RMSprop/RMSprop/update_LSTM_1/lstm_cell_2/recurrent_kernel/AssignVariableOp_1_2"
}
node {
  name: "training/RMSprop/RMSprop/Const_2"
  op: "Const"
  input: "^training/RMSprop/RMSprop/group_deps_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/AssignAddVariableOp_2"
  op: "AssignAddVariableOp"
  input: "training/RMSprop/iter_2"
  input: "training/RMSprop/RMSprop/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps_2"
  op: "NoOp"
  input: "^loss/AddN_1_2"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp_2"
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "total_2"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_1_2"
  op: "AssignVariableOp"
  input: "count_2"
  input: "Placeholder_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp_1_2"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^AssignVariableOp_1_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/bias/rms_2"
}
node {
  name: "VarIsInitializedOp_1_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/kernel_2"
}
node {
  name: "VarIsInitializedOp_2_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/bias_2"
}
node {
  name: "VarIsInitializedOp_3_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms_2"
}
node {
  name: "VarIsInitializedOp_4_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate_2"
}
node {
  name: "VarIsInitializedOp_5_2"
  op: "VarIsInitializedOp"
  input: "Dense_1/bias_2"
}
node {
  name: "VarIsInitializedOp_6_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter_2"
}
node {
  name: "VarIsInitializedOp_7_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay_2"
}
node {
  name: "VarIsInitializedOp_8_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho_2"
}
node {
  name: "VarIsInitializedOp_9_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/bias/rms_2"
}
node {
  name: "VarIsInitializedOp_10_2"
  op: "VarIsInitializedOp"
  input: "Dense_1/kernel_2"
}
node {
  name: "VarIsInitializedOp_11_2"
  op: "VarIsInitializedOp"
  input: "Dense_2/kernel_2"
}
node {
  name: "VarIsInitializedOp_12_2"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "VarIsInitializedOp_13_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms_2"
}
node {
  name: "VarIsInitializedOp_14_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_1/kernel/rms_2"
}
node {
  name: "VarIsInitializedOp_15_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum_2"
}
node {
  name: "VarIsInitializedOp_16_2"
  op: "VarIsInitializedOp"
  input: "LSTM_1/lstm_cell_2/recurrent_kernel_2"
}
node {
  name: "VarIsInitializedOp_17_2"
  op: "VarIsInitializedOp"
  input: "Dense_2/bias_2"
}
node {
  name: "VarIsInitializedOp_18_2"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "VarIsInitializedOp_19_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/kernel/rms_2"
}
node {
  name: "VarIsInitializedOp_20_2"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/Dense_2/bias/rms_2"
}
node {
  name: "init_5_2"
  op: "NoOp"
  input: "^Dense_1/bias/Assign_2"
  input: "^Dense_1/kernel/Assign_2"
  input: "^Dense_2/bias/Assign_2"
  input: "^Dense_2/kernel/Assign_2"
  input: "^LSTM_1/lstm_cell_2/bias/Assign_2"
  input: "^LSTM_1/lstm_cell_2/kernel/Assign_2"
  input: "^LSTM_1/lstm_cell_2/recurrent_kernel/Assign_2"
  input: "^count/Assign_2"
  input: "^total/Assign_2"
  input: "^training/RMSprop/Dense_1/bias/rms/Assign_2"
  input: "^training/RMSprop/Dense_1/kernel/rms/Assign_2"
  input: "^training/RMSprop/Dense_2/bias/rms/Assign_2"
  input: "^training/RMSprop/Dense_2/kernel/rms/Assign_2"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/bias/rms/Assign_2"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/kernel/rms/Assign_2"
  input: "^training/RMSprop/LSTM_1/lstm_cell_2/recurrent_kernel/rms/Assign_2"
  input: "^training/RMSprop/decay/Assign_2"
  input: "^training/RMSprop/iter/Assign_2"
  input: "^training/RMSprop/learning_rate/Assign_2"
  input: "^training/RMSprop/momentum/Assign_2"
  input: "^training/RMSprop/rho/Assign_2"
}
node {
  name: "evaluation/group_deps_2"
  op: "NoOp"
  input: "^loss/AddN_1_2"
}
node {
  name: "predict/group_deps_2"
  op: "NoOp"
  input: "^Dense_2/Softmax_2"
}
versions {
  producer: 987
}
